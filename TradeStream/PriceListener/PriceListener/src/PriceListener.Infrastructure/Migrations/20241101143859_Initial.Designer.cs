// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PriceListener.Infrastructure.Adapters.Persistence.MySQL;

#nullable disable

namespace PriceListener.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241101143859_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PriceListener.Domain.Entities.Bitstamp.Asks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("OrderBookDataId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("OrderBookDataId");

                    b.ToTable("Asks");
                });

            modelBuilder.Entity("PriceListener.Domain.Entities.Bitstamp.Bids", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("OrderBookDataId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("OrderBookDataId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("PriceListener.Domain.Entities.Bitstamp.OrderBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("DataId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("OrderBooks");
                });

            modelBuilder.Entity("PriceListener.Domain.Entities.Bitstamp.OrderBookData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("Microtimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("OrderBookDatas");
                });

            modelBuilder.Entity("PriceListener.Domain.Entities.Bitstamp.Asks", b =>
                {
                    b.HasOne("PriceListener.Domain.Entities.Bitstamp.OrderBookData", null)
                        .WithMany("Asks")
                        .HasForeignKey("OrderBookDataId");
                });

            modelBuilder.Entity("PriceListener.Domain.Entities.Bitstamp.Bids", b =>
                {
                    b.HasOne("PriceListener.Domain.Entities.Bitstamp.OrderBookData", null)
                        .WithMany("Bids")
                        .HasForeignKey("OrderBookDataId");
                });

            modelBuilder.Entity("PriceListener.Domain.Entities.Bitstamp.OrderBook", b =>
                {
                    b.HasOne("PriceListener.Domain.Entities.Bitstamp.OrderBookData", "Data")
                        .WithMany()
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Data");
                });

            modelBuilder.Entity("PriceListener.Domain.Entities.Bitstamp.OrderBookData", b =>
                {
                    b.Navigation("Asks");

                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
